#import <Foundation/Foundation.h>
#import "PierEstagioCartaoResponse.h"
#import "PierStatusCartaoResponse.h"
#import "PierStatusContaResponse.h"
#import "PierStatusImpressaoResponse.h"
#import "PierPageEstagioCartaoResponse.h"
#import "PierPageStatusCartaoResponse.h"
#import "PierPageStatusContaResponse.h"
#import "PierPageStatusImpressaoResponse.h"
#import "PierObject.h"
#import "PierApiClient.h"


/**
 * NOTE: This class is auto generated by the swagger code generator program. 
 * https://github.com/swagger-api/swagger-codegen 
 * Do not edit the class manually.
 */

@interface PierStatusParametroApi: NSObject

@property(nonatomic, assign)PierApiClient *apiClient;

-(instancetype) initWithApiClient:(PierApiClient *)apiClient;
-(void) addHeader:(NSString*)value forKey:(NSString*)key;
-(unsigned long) requestQueueSize;
+(PierStatusParametroApi*) apiWithHeader:(NSString*)headerValue key:(NSString*)key;
+(PierStatusParametroApi*) sharedAPI;
///
///
/// Apresenta os dados de um determinado Estagio Cart\u00E3o
/// Este m\u00E9todo permite consultar os par\u00E2metros de um determinado Est\u00E1gio de Entrega do Cart\u00E3o a partir do seu c\u00F3digo de identifica\u00E7\u00E3o (id).
///
/// @param _id C\u00F3digo de Identifica\u00E7\u00E3o do Est\u00E1gio de Entrega do Cart\u00E3o (id).
/// 
///
/// @return PierEstagioCartaoResponse*
-(NSNumber*) consultarEstagioCartaoUsingGETWithId: (NSNumber*) _id
    completionHandler: (void (^)(PierEstagioCartaoResponse* output, NSError* error)) handler;


///
///
/// Apresenta os dados de um determinado Status Cart\u00E3o
/// Este m\u00E9todo permite consultar os par\u00E2metros de um determinado Status de Cart\u00E3o a partir do seu c\u00F3digo de identifica\u00E7\u00E3o (id).
///
/// @param _id C\u00F3digo de Identifica\u00E7\u00E3o do Est\u00E1gio de Entrega do Cart\u00E3o (id).
/// 
///
/// @return PierStatusCartaoResponse*
-(NSNumber*) consultarStatusCartaoUsingGETWithId: (NSNumber*) _id
    completionHandler: (void (^)(PierStatusCartaoResponse* output, NSError* error)) handler;


///
///
/// Apresenta os dados de um determinado Status Conta
/// Este m\u00E9todo permite consultar os par\u00E2metros de um determinado Status Conta a partir do seu c\u00F3digo de identifica\u00E7\u00E3o (id).
///
/// @param _id C\u00F3digo de Identifica\u00E7\u00E3o do Status da Conta (id).
/// 
///
/// @return PierStatusContaResponse*
-(NSNumber*) consultarUsingGET28WithId: (NSNumber*) _id
    completionHandler: (void (^)(PierStatusContaResponse* output, NSError* error)) handler;


///
///
/// Apresenta os dados de um determinado Status Impress\u00E3o
/// Este m\u00E9todo permite consultar os par\u00E2metros de um determinado Status de Impress\u00E3o do Cart\u00E3o a partir do seu c\u00F3digo de identifica\u00E7\u00E3o (id).
///
/// @param _id C\u00F3digo de Identifica\u00E7\u00E3o do Status de Impress\u00E3o do Cart\u00E3o (id).
/// 
///
/// @return PierStatusImpressaoResponse*
-(NSNumber*) consultarUsingGET29WithId: (NSNumber*) _id
    completionHandler: (void (^)(PierStatusImpressaoResponse* output, NSError* error)) handler;


///
///
/// Lista as op\u00E7\u00F5es de Est\u00E1gios do Cart\u00E3o
/// Este m\u00E9todo permite que sejam listadas as op\u00E7\u00F5es de Est\u00E1gio de Entrega que podem ser atribu\u00EDdas aos Cart\u00F5es.
///
/// @param sort Tipo de ordena\u00E7\u00E3o dos registros.
/// @param page P\u00E1gina solicitada (Default = 0)
/// @param limit Limite de elementos por solicita\u00E7\u00E3o (Default = 50, Max = 50)
/// @param _id Id do est\u00E1gio cart\u00E3o
/// @param nome Nome do est\u00E1gio cart\u00E3o
/// 
///
/// @return PierPageEstagioCartaoResponse*
-(NSNumber*) listarEstagiosCartoesUsingGETWithSort: (NSArray* /* NSString */) sort
    page: (NSNumber*) page
    limit: (NSNumber*) limit
    _id: (NSNumber*) _id
    nome: (NSString*) nome
    completionHandler: (void (^)(PierPageEstagioCartaoResponse* output, NSError* error)) handler;


///
///
/// Lista as op\u00E7\u00F5es de Status do Cart\u00E3o
/// Este m\u00E9todo permite que sejam listadas as possibilidades de Status que podem ser atribu\u00EDdas aos Cart\u00F5es.
///
/// @param sort Tipo de ordena\u00E7\u00E3o dos registros.
/// @param page P\u00E1gina solicitada (Default = 0)
/// @param limit Limite de elementos por solicita\u00E7\u00E3o (Default = 50, Max = 50)
/// @param _id C\u00F3digo de Identifica\u00E7\u00E3o do Status do Cart\u00E3o (id) 
/// @param nome Nome atribu\u00EDdo ao Status de Entrega do Cart\u00E3o.
/// @param permiteDesbloquear Par\u00E2metro que define se o status do cart\u00E3o permite a reativa\u00E7\u00E3o do cart\u00E3o, sendo: 0: Inativo e 1: Ativo.
/// @param permiteAtribuirComoBloqueio Par\u00E2metro que define se o status do cart\u00E3o permite a reativa\u00E7\u00E3o do cart\u00E3o, sendo: 0: Inativo e 1: Ativo.
/// @param permiteAtribuirComoCancelamento Par\u00E2metro que define se o status do cart\u00E3o permite a reativa\u00E7\u00E3o do cart\u00E3o, sendo: 0: Inativo e 1: Ativo.
/// @param cobrarTarifaAoEmitirNovaVia Par\u00E2metro que define se o status do cart\u00E3o permite a reativa\u00E7\u00E3o do cart\u00E3o, sendo: 0: Inativo e 1: Ativo.
/// 
///
/// @return PierPageStatusCartaoResponse*
-(NSNumber*) listarStatusCartoesUsingGETWithSort: (NSArray* /* NSString */) sort
    page: (NSNumber*) page
    limit: (NSNumber*) limit
    _id: (NSNumber*) _id
    nome: (NSString*) nome
    permiteDesbloquear: (NSNumber*) permiteDesbloquear
    permiteAtribuirComoBloqueio: (NSNumber*) permiteAtribuirComoBloqueio
    permiteAtribuirComoCancelamento: (NSNumber*) permiteAtribuirComoCancelamento
    cobrarTarifaAoEmitirNovaVia: (NSNumber*) cobrarTarifaAoEmitirNovaVia
    completionHandler: (void (^)(PierPageStatusCartaoResponse* output, NSError* error)) handler;


///
///
/// Lista os tipos de transa\u00E7\u00F5es
/// Esse recurso permite listar os tipos de transa\u00E7\u00F5es dispon\u00EDveis.
///
/// 
///
/// @return NSArray* /* NSObject */
-(NSNumber*) listarTiposEventosTransacoesUsingGETWithCompletionHandler: 
    (void (^)(NSArray* /* NSObject */ output, NSError* error)) handler;


///
///
/// Lista os Status Contas cadastrados para o Emissor
/// Este m\u00E9todo permite que sejam listados os Status Contas existentes na base de dados do Emissor.
///
/// @param sort Tipo de ordena\u00E7\u00E3o dos registros.
/// @param page P\u00E1gina solicitada (Default = 0)
/// @param limit Limite de elementos por solicita\u00E7\u00E3o (Default = 50, Max = 50)
/// @param _id C\u00F3digo de Identifica\u00E7\u00E3o do Status da Conta (id).
/// @param nome Nome atribu\u00EDdo ao Status da Conta.
/// @param permiteAlterarVencimento Par\u00E2metro que define se o Status da conta permite a solicita\u00E7\u00E3o da altera\u00E7\u00E3o do Dia para Vencimento das Faturas, sendo: 0: Inativo e 1: Ativo.
/// @param permiteAlterarLimite Par\u00E2metro que define se o Status da conta permite altera\u00E7\u00E3o de Limites, sendo: 0: Inativo e 1: Ativo.
/// @param permiteEmitirNovaViaCartao Par\u00E2metro que define se o Status da conta permite solicitar uma nova via de Cart\u00E3o, sendo: 0: Inativo e 1: Ativo.
/// @param permiteFazerTransferencia Par\u00E2metro que define se o Status da conta permite originar Transfer\u00EAncias de Cr\u00E9dito para outras Contas do mesmo Emissor ou para uma Conta Banc\u00E1ria, sendo: 0: Inativo e 1: Ativo.
/// @param permiteReceberTransferencia Par\u00E2metro que define se o Status da conta permite  receber Transfer\u00EAncias de Cr\u00E9dito originadas de outras Contas do mesmo emissor, sendo: 0: Inativo e 1: Ativo.
/// @param permiteCriarAcordoCobranca Par\u00E2metro que define se o Status da conta permite ter um Acordo de Cobran\u00E7a de D\u00EDvida criado para ela, sendo: 0: Inativo e 1: Ativo.
/// @param permiteAtribuirComoBloqueio Par\u00E2metro que define se o Status da conta permite ser atribu\u00EDdo para Bloquear temporariamente uma Conta, sendo: 0: Inativo e 1: Ativo.
/// @param permiteDesbloquear Par\u00E2metro que define se o Status da conta permite ser desbloqueada, sendo: 0: Inativo e 1: Ativo.
/// @param permiteAtribuirComoCancelamento Par\u00E2metro que define se o Status da conta permite ser atribu\u00EDdo para realizar o cancelamento definitivo de uma conta, sendo: 0: Inativo e 1: Ativo.
/// 
///
/// @return PierPageStatusContaResponse*
-(NSNumber*) listarUsingGET38WithSort: (NSArray* /* NSString */) sort
    page: (NSNumber*) page
    limit: (NSNumber*) limit
    _id: (NSNumber*) _id
    nome: (NSString*) nome
    permiteAlterarVencimento: (NSNumber*) permiteAlterarVencimento
    permiteAlterarLimite: (NSNumber*) permiteAlterarLimite
    permiteEmitirNovaViaCartao: (NSNumber*) permiteEmitirNovaViaCartao
    permiteFazerTransferencia: (NSNumber*) permiteFazerTransferencia
    permiteReceberTransferencia: (NSNumber*) permiteReceberTransferencia
    permiteCriarAcordoCobranca: (NSNumber*) permiteCriarAcordoCobranca
    permiteAtribuirComoBloqueio: (NSNumber*) permiteAtribuirComoBloqueio
    permiteDesbloquear: (NSNumber*) permiteDesbloquear
    permiteAtribuirComoCancelamento: (NSNumber*) permiteAtribuirComoCancelamento
    completionHandler: (void (^)(PierPageStatusContaResponse* output, NSError* error)) handler;


///
///
/// Lista as op\u00E7\u00F5es de Status Impress\u00E3o
/// Este m\u00E9todo permite que sejam listadas as op\u00E7\u00F5es de Status Impress\u00E3o que podem ser atribu\u00EDdas aos Cart\u00F5es.
///
/// @param sort Tipo de ordena\u00E7\u00E3o dos registros.
/// @param page P\u00E1gina solicitada (Default = 0)
/// @param limit Limite de elementos por solicita\u00E7\u00E3o (Default = 50, Max = 50)
/// @param _id Id do est\u00E1gio cart\u00E3o
/// @param nome Nome do status impress\u00E3o
/// 
///
/// @return PierPageStatusImpressaoResponse*
-(NSNumber*) listarUsingGET39WithSort: (NSArray* /* NSString */) sort
    page: (NSNumber*) page
    limit: (NSNumber*) limit
    _id: (NSNumber*) _id
    nome: (NSString*) nome
    completionHandler: (void (^)(PierPageStatusImpressaoResponse* output, NSError* error)) handler;



@end
