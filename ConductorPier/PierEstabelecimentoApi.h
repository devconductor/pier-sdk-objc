#import <Foundation/Foundation.h>
#import "PierPessoaJuridicaResponse.h"
#import "PierTelefoneEstabelecimentoResponse.h"
#import "PierTerminalResponse.h"
#import "PierTerminalUpdate.h"
#import "PierCredorResponse.h"
#import "PierCredorDTO.h"
#import "PierEstabelecimentoResponse.h"
#import "PierPageCredorResponse.h"
#import "PierPageEstabelecimentoResponse.h"
#import "PierPagePessoaJuridicaResponse.h"
#import "PierPageTelefoneEstabelecimentoResponse.h"
#import "PierPageTerminalResponse.h"
#import "PierObject.h"
#import "PierApiClient.h"


/**
 * NOTE: This class is auto generated by the swagger code generator program. 
 * https://github.com/swagger-api/swagger-codegen 
 * Do not edit the class manually.
 */

@interface PierEstabelecimentoApi: NSObject

@property(nonatomic, assign)PierApiClient *apiClient;

-(instancetype) initWithApiClient:(PierApiClient *)apiClient;
-(void) addHeader:(NSString*)value forKey:(NSString*)key;
-(unsigned long) requestQueueSize;
+(PierEstabelecimentoApi*) apiWithHeader:(NSString*)headerValue key:(NSString*)key;
+(PierEstabelecimentoApi*) sharedAPI;
///
///
/// Alterar Pessoa Jur\u00C3\u00ADdica
/// Altera uma pessoa jur\u00C3\u00ADdica.
///
/// @param _id C\u00C3\u00B3digo de identifica\u00C3\u00A7\u00C3\u00A3o da pessoa jur\u00C3\u00ADdica
/// @param razaoSocial Raz\u00C3\u00A3o social da pessoa jur\u00C3\u00ADdica
/// @param inscricaoEstadual N\u00C3\u00BAmero da inscri\u00C3\u00A7\u00C3\u00A3o estadual
/// @param contato Nome da pessoa para entrar em contato
/// @param banco C\u00C3\u00B3digo do banco
/// @param agencia Raz\u00C3\u00A3o social da pessoa jur\u00C3\u00ADdica
/// @param digitoVerificadorAgencia D\u00C3\u00ADgito Verificador da ag\u00C3\u00AAncia
/// @param contaCorrente C\u00C3\u00B3digo da Conta Corrente
/// @param digitoVerificadorContaCorrente D\u00C3\u00ADgito Verificador da Conta Corrente
/// 
///
/// @return PierPessoaJuridicaResponse*
-(NSNumber*) alterarUsingPUT11WithId: (NSNumber*) _id
    razaoSocial: (NSString*) razaoSocial
    inscricaoEstadual: (NSString*) inscricaoEstadual
    contato: (NSString*) contato
    banco: (NSNumber*) banco
    agencia: (NSNumber*) agencia
    digitoVerificadorAgencia: (NSString*) digitoVerificadorAgencia
    contaCorrente: (NSString*) contaCorrente
    digitoVerificadorContaCorrente: (NSString*) digitoVerificadorContaCorrente
    completionHandler: (void (^)(PierPessoaJuridicaResponse* output, NSError* error)) handler;


///
///
/// Altera um Telefone do estabelecimento
/// Este m\u00C3\u00A9todo realiza a altera\u00C3\u00A7\u00C3\u00A3o dos telefones dos estabelecimentos.
///
/// @param _id C\u00C3\u00B3digo de Identifica\u00C3\u00A7\u00C3\u00A3o do Telefone Estabelecimento (id).
/// @param ddd C\u00C3\u00B3digo DDD do telefone (id).
/// @param telefone N\u00C3\u00BAmero do telefone.
/// @param ramal N\u00C3\u00BAmero do ramal.
/// 
///
/// @return PierTelefoneEstabelecimentoResponse*
-(NSNumber*) alterarUsingPUT13WithId: (NSNumber*) _id
    ddd: (NSString*) ddd
    telefone: (NSString*) telefone
    ramal: (NSString*) ramal
    completionHandler: (void (^)(PierTelefoneEstabelecimentoResponse* output, NSError* error)) handler;


///
///
/// Altera um Terminal
/// Este m\u00C3\u00A9todo realiza a altera\u00C3\u00A7\u00C3\u00A3o dos Terminais.
///
/// @param _id C\u00C3\u00B3digo de Identifica\u00C3\u00A7\u00C3\u00A3o do terminal (id).
/// @param terminalUpdate terminalUpdate
/// 
///
/// @return PierTerminalResponse*
-(NSNumber*) alterarUsingPUT15WithId: (NSNumber*) _id
    terminalUpdate: (PierTerminalUpdate*) terminalUpdate
    completionHandler: (void (^)(PierTerminalResponse* output, NSError* error)) handler;


///
///
/// Alterar Credor
/// Altera um credor.
///
/// @param _id C\u00C3\u00B3digo de identifica\u00C3\u00A7\u00C3\u00A3o da credor
/// @param credorUpdate credorUpdate
/// 
///
/// @return PierCredorResponse*
-(NSNumber*) alterarUsingPUT5WithId: (NSNumber*) _id
    credorUpdate: (PierCredorDTO*) credorUpdate
    completionHandler: (void (^)(PierCredorResponse* output, NSError* error)) handler;


///
///
/// Cadastrar Credor
/// Cadastra um credor.
///
/// @param credorPersist credorPersist
/// 
///
/// @return PierCredorResponse*
-(NSNumber*) cadastrarUsingPOST2WithCredorPersist: (PierCredorDTO*) credorPersist
    completionHandler: (void (^)(PierCredorResponse* output, NSError* error)) handler;


///
///
/// Cadastrar Pessoa Jur\u00C3\u00ADdica
/// Cadastra uma pessoa jur\u00C3\u00ADdica.
///
/// @param razaoSocial Raz\u00C3\u00A3o social da pessoa jur\u00C3\u00ADdica
/// @param cnpj C\u00C3\u00B3digo do Cadastro Nacional de Pessoas Jur\u00C3\u00ADdicas
/// @param inscricaoEstadual N\u00C3\u00BAmero da inscri\u00C3\u00A7\u00C3\u00A3o estadual
/// @param contato Nome da pessoa para entrar em contato
/// @param banco C\u00C3\u00B3digo do banco
/// @param agencia Raz\u00C3\u00A3o social da pessoa jur\u00C3\u00ADdica
/// @param digitoVerificadorAgencia D\u00C3\u00ADgito Verificador da ag\u00C3\u00AAncia
/// @param contaCorrente C\u00C3\u00B3digo da Conta Corrente
/// @param digitoVerificadorContaCorrente D\u00C3\u00ADgito Verificador da Conta Corrente
/// 
///
/// @return PierPessoaJuridicaResponse*
-(NSNumber*) cadastrarUsingPOST3WithRazaoSocial: (NSString*) razaoSocial
    cnpj: (NSString*) cnpj
    inscricaoEstadual: (NSString*) inscricaoEstadual
    contato: (NSString*) contato
    banco: (NSNumber*) banco
    agencia: (NSNumber*) agencia
    digitoVerificadorAgencia: (NSString*) digitoVerificadorAgencia
    contaCorrente: (NSString*) contaCorrente
    digitoVerificadorContaCorrente: (NSString*) digitoVerificadorContaCorrente
    completionHandler: (void (^)(PierPessoaJuridicaResponse* output, NSError* error)) handler;


///
///
/// Consultar credor
/// Consulta um credor atrav\u00C3\u00A9s do seu identificador.
///
/// @param _id C\u00C3\u00B3digo de identifica\u00C3\u00A7\u00C3\u00A3o da credor
/// 
///
/// @return PierCredorResponse*
-(NSNumber*) consultarUsingGET11WithId: (NSNumber*) _id
    completionHandler: (void (^)(PierCredorResponse* output, NSError* error)) handler;


///
///
/// Consultar estabelecimento por id
/// Consulta os detalhes de um determinado estabelecimento
///
/// @param _id Id
/// 
///
/// @return PierEstabelecimentoResponse*
-(NSNumber*) consultarUsingGET15WithId: (NSNumber*) _id
    completionHandler: (void (^)(PierEstabelecimentoResponse* output, NSError* error)) handler;


///
///
/// Consultar pessoa jur\u00C3\u00ADdica
/// Consulta uma pessoa jur\u00C3\u00ADdica atrav\u00C3\u00A9s do seu identificador.
///
/// @param _id C\u00C3\u00B3digo de identifica\u00C3\u00A7\u00C3\u00A3o da pessoa jur\u00C3\u00ADdica
/// 
///
/// @return PierPessoaJuridicaResponse*
-(NSNumber*) consultarUsingGET20WithId: (NSNumber*) _id
    completionHandler: (void (^)(PierPessoaJuridicaResponse* output, NSError* error)) handler;


///
///
/// Apresenta os dados de um determinado telefone de um estabelecimento
/// Este m\u00C3\u00A9todo permite consultar um determinado telefone de um estabelecimento a partir do seu c\u00C3\u00B3digo de identifica\u00C3\u00A7\u00C3\u00A3o (id).
///
/// @param _id C\u00C3\u00B3digo de Identifica\u00C3\u00A7\u00C3\u00A3o do Telefone Estabelecimento (id).
/// 
///
/// @return PierTelefoneEstabelecimentoResponse*
-(NSNumber*) consultarUsingGET26WithId: (NSNumber*) _id
    completionHandler: (void (^)(PierTelefoneEstabelecimentoResponse* output, NSError* error)) handler;


///
///
/// Apresenta os dados de um determinado Terminal
/// Este m\u00C3\u00A9todo permite consultar um determinado Terminal a partir do seu c\u00C3\u00B3digo de identifica\u00C3\u00A7\u00C3\u00A3o (id).
///
/// @param _id C\u00C3\u00B3digo de Identifica\u00C3\u00A7\u00C3\u00A3o do Terminal (id).
/// 
///
/// @return PierTerminalResponse*
-(NSNumber*) consultarUsingGET28WithId: (NSNumber*) _id
    completionHandler: (void (^)(PierTerminalResponse* output, NSError* error)) handler;


///
///
/// Listar credores
/// Lista credores cadastrados. 
///
/// @param sort Tipo de ordena\u00C3\u00A7\u00C3\u00A3o dos registros.
/// @param page P\u00C3\u00A1gina solicitada (Default = 0)
/// @param limit Limite de elementos por solicita\u00C3\u00A7\u00C3\u00A3o (Default = 50, Max = 50)
/// @param idPessoaJuridica Identificador da pessoa jur\u00C3\u00ADdica do credor
/// @param nome Nome do credor
/// @param periodicidade Periodicidade do pagamento
/// @param pagamentoSemanal Dia para pagamento semanal
/// @param pagamentoMensal Dia da data para o pagamento mensal
/// @param pagamentoDecendialPrimeiro Dia da data para o primeiro pagamento decendial
/// @param pagamentoDecendialSegundo Dia da data para o segundo pagamento decendial
/// @param pagamentoDecendialTerceiro Dia da data para o terceiro pagamento decendial
/// @param pagamentoQuinzenalPrimeiro Dia da data para o primeiro pagamento quinzenal
/// @param pagamentoQuinzenalSegundo Dia da data para o segundo pagamento quinzenal
/// @param credorBanco Indica se este credor pode ser um Credor RAV de outros credores
/// @param percentualRAV Valor percentual do RAV do credor
/// @param recebeRAV Indica se o credor recebe RAV e o tipo
/// @param percentualMultiplica Percentual Multiplica
/// @param taxaAdm Taxa Administrativa
/// @param taxaBanco Taxa do Banco
/// @param limiteRAV Valor limite do RAV
/// @param idCredorRAV C\u00C3\u00B3digo identificador do credor RAV
/// @param banco C\u00C3\u00B3digo do banco
/// @param agencia Raz\u00C3\u00A3o social da pessoa jur\u00C3\u00ADdica
/// @param digitoVerificadorAgencia D\u00C3\u00ADgito Verificador da ag\u00C3\u00AAncia
/// @param contaCorrente C\u00C3\u00B3digo da Conta Corrente
/// @param digitoVerificadorContaCorrente D\u00C3\u00ADgito Verificador da Conta Corrente
/// 
///
/// @return PierPageCredorResponse*
-(NSNumber*) listarUsingGET14WithSort: (NSArray* /* NSString */) sort
    page: (NSNumber*) page
    limit: (NSNumber*) limit
    idPessoaJuridica: (NSNumber*) idPessoaJuridica
    nome: (NSString*) nome
    periodicidade: (NSString*) periodicidade
    pagamentoSemanal: (NSString*) pagamentoSemanal
    pagamentoMensal: (NSNumber*) pagamentoMensal
    pagamentoDecendialPrimeiro: (NSNumber*) pagamentoDecendialPrimeiro
    pagamentoDecendialSegundo: (NSNumber*) pagamentoDecendialSegundo
    pagamentoDecendialTerceiro: (NSNumber*) pagamentoDecendialTerceiro
    pagamentoQuinzenalPrimeiro: (NSNumber*) pagamentoQuinzenalPrimeiro
    pagamentoQuinzenalSegundo: (NSNumber*) pagamentoQuinzenalSegundo
    credorBanco: (NSNumber*) credorBanco
    percentualRAV: (NSNumber*) percentualRAV
    recebeRAV: (NSString*) recebeRAV
    percentualMultiplica: (NSNumber*) percentualMultiplica
    taxaAdm: (NSNumber*) taxaAdm
    taxaBanco: (NSNumber*) taxaBanco
    limiteRAV: (NSNumber*) limiteRAV
    idCredorRAV: (NSNumber*) idCredorRAV
    banco: (NSNumber*) banco
    agencia: (NSNumber*) agencia
    digitoVerificadorAgencia: (NSString*) digitoVerificadorAgencia
    contaCorrente: (NSString*) contaCorrente
    digitoVerificadorContaCorrente: (NSString*) digitoVerificadorContaCorrente
    completionHandler: (void (^)(PierPageCredorResponse* output, NSError* error)) handler;


///
///
/// Lista Estabelecimentos
/// Lista todas os Estabelecimentos
///
/// @param sort Tipo de ordena\u00C3\u00A7\u00C3\u00A3o dos registros.
/// @param page P\u00C3\u00A1gina solicitada (Default = 0)
/// @param limit Limite de elementos por solicita\u00C3\u00A7\u00C3\u00A3o (Default = 50, Max = 50)
/// @param _id C\u00C3\u00B3digo de identifica\u00C3\u00A7\u00C3\u00A3o do estabelecimento (id).
/// @param numeroReceitaFederal Apresenta o n\u00C3\u00BAmero de identifica\u00C3\u00A7\u00C3\u00A3o do Estabelecimento na Receita Federal.
/// @param nome Nome do Estabelecimento.
/// @param descricao Raz\u00C3\u00A3o Social do Estabelecimento.
/// @param nomeFantasia T\u00C3\u00ADtulo Comercial do Estabelecimento.
/// @param cep C\u00C3\u00B3digo de Endere\u00C3\u00A7amento Postal (CEP).
/// @param nomeLogradouro Nome do Logradouro.
/// @param numeroEndereco N\u00C3\u00BAmero do endere\u00C3\u00A7o.
/// @param complemento Descri\u00C3\u00A7\u00C3\u00B5es complementares referente ao endere\u00C3\u00A7o.
/// @param bairro Nome do bairro do endere\u00C3\u00A7o.
/// @param cidade Nome da cidade do endere\u00C3\u00A7o.
/// @param uf Sigla de identifica\u00C3\u00A7\u00C3\u00A3o da Unidade Federativa do endere\u00C3\u00A7o.
/// @param pais Nome do pa\u00C3\u00ADs.
/// @param dataCadastramento Data de Cadastro do Estabelecimento, no formato yyyy-MM-dd.
/// @param contato Nome da pessoa para contato com o Estabelecimento.
/// @param email E-mail da pessoa para contato com o Estabelecimento.
/// @param flagArquivoSecrFazenda Indica se o estabelecimento ser\u00C3\u00A1 inclu\u00C3\u00ADdo no arquivo de registro para a Secretaria da Fazenda Estadual.
/// @param flagCartaoDigitado Indica se o estabelecimento poder\u00C3\u00A1 originar transa\u00C3\u00A7\u00C3\u00B5es sem a leitura da tarja ou do chip do cart\u00C3\u00A3o.
/// @param inativo Indica se o estabelecimento est\u00C3\u00A1 inativo.
/// 
///
/// @return PierPageEstabelecimentoResponse*
-(NSNumber*) listarUsingGET19WithSort: (NSArray* /* NSString */) sort
    page: (NSNumber*) page
    limit: (NSNumber*) limit
    _id: (NSNumber*) _id
    numeroReceitaFederal: (NSNumber*) numeroReceitaFederal
    nome: (NSString*) nome
    descricao: (NSString*) descricao
    nomeFantasia: (NSString*) nomeFantasia
    cep: (NSString*) cep
    nomeLogradouro: (NSString*) nomeLogradouro
    numeroEndereco: (NSNumber*) numeroEndereco
    complemento: (NSString*) complemento
    bairro: (NSString*) bairro
    cidade: (NSString*) cidade
    uf: (NSString*) uf
    pais: (NSString*) pais
    dataCadastramento: (NSString*) dataCadastramento
    contato: (NSString*) contato
    email: (NSString*) email
    flagArquivoSecrFazenda: (NSNumber*) flagArquivoSecrFazenda
    flagCartaoDigitado: (NSNumber*) flagCartaoDigitado
    inativo: (NSNumber*) inativo
    completionHandler: (void (^)(PierPageEstabelecimentoResponse* output, NSError* error)) handler;


///
///
/// Listar pessoas jur\u00C3\u00ADdicas
/// Lista pessoas jur\u00C3\u00ADdicas cadastradas. 
///
/// @param sort Tipo de ordena\u00C3\u00A7\u00C3\u00A3o dos registros.
/// @param page P\u00C3\u00A1gina solicitada (Default = 0)
/// @param limit Limite de elementos por solicita\u00C3\u00A7\u00C3\u00A3o (Default = 50, Max = 50)
/// @param razaoSocial Raz\u00C3\u00A3o social da pessoa jur\u00C3\u00ADdica
/// @param cnpj C\u00C3\u00B3digo do Cadastro Nacional de Pessoas Jur\u00C3\u00ADdicas
/// @param inscricaoEstadual N\u00C3\u00BAmero da inscri\u00C3\u00A7\u00C3\u00A3o estadual
/// @param contato Nome da pessoa para entrar em contato
/// @param banco C\u00C3\u00B3digo do banco
/// @param agencia Raz\u00C3\u00A3o social da pessoa jur\u00C3\u00ADdica
/// @param digitoVerificadorAgencia D\u00C3\u00ADgito Verificador da ag\u00C3\u00AAncia
/// @param contaCorrente C\u00C3\u00B3digo da Conta Corrente
/// @param digitoVerificadorContaCorrente D\u00C3\u00ADgito Verificador da Conta Corrente
/// 
///
/// @return PierPagePessoaJuridicaResponse*
-(NSNumber*) listarUsingGET24WithSort: (NSArray* /* NSString */) sort
    page: (NSNumber*) page
    limit: (NSNumber*) limit
    razaoSocial: (NSString*) razaoSocial
    cnpj: (NSString*) cnpj
    inscricaoEstadual: (NSString*) inscricaoEstadual
    contato: (NSString*) contato
    banco: (NSNumber*) banco
    agencia: (NSNumber*) agencia
    digitoVerificadorAgencia: (NSString*) digitoVerificadorAgencia
    contaCorrente: (NSString*) contaCorrente
    digitoVerificadorContaCorrente: (NSString*) digitoVerificadorContaCorrente
    completionHandler: (void (^)(PierPagePessoaJuridicaResponse* output, NSError* error)) handler;


///
///
/// Lista os Telefones Estabelecimentos
/// Este m\u00C3\u00A9todo permite que sejam listados os telefones dos estabelecimentos existentes na base de dados do Emissor.
///
/// @param sort Tipo de ordena\u00C3\u00A7\u00C3\u00A3o dos registros.
/// @param page P\u00C3\u00A1gina solicitada (Default = 0)
/// @param limit Limite de elementos por solicita\u00C3\u00A7\u00C3\u00A3o (Default = 50, Max = 50)
/// @param idEstabelecimento C\u00C3\u00B3digo de Identifica\u00C3\u00A7\u00C3\u00A3o do Tipo do Estabelecimento (id).
/// 
///
/// @return PierPageTelefoneEstabelecimentoResponse*
-(NSNumber*) listarUsingGET33WithSort: (NSArray* /* NSString */) sort
    page: (NSNumber*) page
    limit: (NSNumber*) limit
    idEstabelecimento: (NSNumber*) idEstabelecimento
    completionHandler: (void (^)(PierPageTelefoneEstabelecimentoResponse* output, NSError* error)) handler;


///
///
/// Lista os Terminais cadastrados no Emissor
/// Este m\u00C3\u00A9todo permite que sejam listados os terminais existentes na base de dados do Emissor.
///
/// @param sort Tipo de ordena\u00C3\u00A7\u00C3\u00A3o dos registros.
/// @param page P\u00C3\u00A1gina solicitada (Default = 0)
/// @param limit Limite de elementos por solicita\u00C3\u00A7\u00C3\u00A3o (Default = 50, Max = 50)
/// @param _id C\u00C3\u00B3digo de Identifica\u00C3\u00A7\u00C3\u00A3o do Terminal (id).
/// @param terminal C\u00C3\u00B3digo de Identifica\u00C3\u00A7\u00C3\u00A3o do terminal.
/// @param numeroEstabelecimento N\u00C3\u00BAmero do estabelecimento a qual o terminal pertence.
/// @param idEstabelecimento N\u00C3\u00BAmero de identifica\u00C3\u00A7\u00C3\u00A3o do estabelecimento a qual o terminal pertence.
/// 
///
/// @return PierPageTerminalResponse*
-(NSNumber*) listarUsingGET35WithSort: (NSArray* /* NSString */) sort
    page: (NSNumber*) page
    limit: (NSNumber*) limit
    _id: (NSNumber*) _id
    terminal: (NSString*) terminal
    numeroEstabelecimento: (NSNumber*) numeroEstabelecimento
    idEstabelecimento: (NSNumber*) idEstabelecimento
    completionHandler: (void (^)(PierPageTerminalResponse* output, NSError* error)) handler;


///
///
/// Realiza o cadastro de um novo telefone para um estabelecimento 
/// Este m\u00C3\u00A9todo permite que seja cadastrado um novo telefone para um estabelecimento.
///
/// @param idEstabelecimento C\u00C3\u00B3digo de Identifica\u00C3\u00A7\u00C3\u00A3o do Estabelecimento (id).
/// @param ddd C\u00C3\u00B3digo DDD do telefone (id).
/// @param telefone N\u00C3\u00BAmero do telefone.
/// @param ramal N\u00C3\u00BAmero do ramal.
/// 
///
/// @return PierTelefoneEstabelecimentoResponse*
-(NSNumber*) salvarUsingPOST19WithIdEstabelecimento: (NSNumber*) idEstabelecimento
    ddd: (NSString*) ddd
    telefone: (NSString*) telefone
    ramal: (NSString*) ramal
    completionHandler: (void (^)(PierTelefoneEstabelecimentoResponse* output, NSError* error)) handler;


///
///
/// Realiza o cadastro de um novo Terminal
/// Este m\u00C3\u00A9todo permite que seja cadastrado um novo Terminal.
///
/// @param idEstabelecimento Apresenta o id do estabelecimento.
/// @param flagConsultaExtrato Flag indicando se o terminal \u00C3\u00A9 f\u00C3\u00ADsico ou virtual, sendo: (true: Sim), (false: N\u00C3\u00A3o)).
/// @param flagTerminalVirtual Flag indicando se o terminal permite consultar extrato, sendo: (true: Sim), (false: N\u00C3\u00A3o)).
/// 
///
/// @return PierTerminalResponse*
-(NSNumber*) salvarUsingPOST21WithIdEstabelecimento: (NSNumber*) idEstabelecimento
    flagConsultaExtrato: (NSNumber*) flagConsultaExtrato
    flagTerminalVirtual: (NSNumber*) flagTerminalVirtual
    completionHandler: (void (^)(PierTerminalResponse* output, NSError* error)) handler;



@end
