#import <Foundation/Foundation.h>
#import "PierPageTipoDebitoRecorrenteResponse.h"
#import "PierObject.h"
#import "PierApiClient.h"


/**
 * NOTE: This class is auto generated by the swagger code generator program. 
 * https://github.com/swagger-api/swagger-codegen 
 * Do not edit the class manually.
 */

@interface PierDebitoRecorrenteApi: NSObject

@property(nonatomic, assign)PierApiClient *apiClient;

-(instancetype) initWithApiClient:(PierApiClient *)apiClient;
-(void) addHeader:(NSString*)value forKey:(NSString*)key;
-(unsigned long) requestQueueSize;
+(PierDebitoRecorrenteApi*) apiWithHeader:(NSString*)headerValue key:(NSString*)key;
+(PierDebitoRecorrenteApi*) sharedAPI;
///
///
/// Lista os d\u00E9bitos recorrentes de uma Conta
/// A entidade D\u00E9bito Recorrente trata dos registros contratados por um determinado cliente (idConta) onde a cobran\u00E7a dele se d\u00E1 de forma cont\u00EDnua, consistindo em uma \u201Cassinatura\u201D ou pagamento de mensalidades. Isso significa que, enquanto o servi\u00E7o continuar a ser prestado, o cliente dever\u00E1 continuar realizando os pagamentos. A determina\u00E7\u00E3o de quanto tempo essa rela\u00E7\u00E3o ir\u00E1 durar \u00E9 feita em contrato. Na maioria das vezes, existe um per\u00EDodo m\u00EDnimo e, caso o servi\u00E7o seja cancelado ou o pagamento n\u00E3o seja realizado, o status do D\u00E9bito Recorrente ter\u00E1 a FlagAtivo com valor false. Assim, este m\u00E9todo lista todas as opera\u00E7\u00F5es de D\u00E9bitos Recorrentes que um determinado idConta j\u00E1 contratou, esteja ele ativo ou n\u00E3o.
///
/// @param idConta C\u00F3digo de identifica\u00E7\u00E3o da Conta (id)
/// @param idTipoDebitoRecorrente C\u00F3digo de identifica\u00E7\u00E3o do tipo de d\u00E9bito recorrente (id)
/// @param sort Tipo de ordena\u00E7\u00E3o dos registros.
/// @param page P\u00E1gina solicitada (Default = 0)
/// @param limit Limite de elementos por solicita\u00E7\u00E3o (Default = 50, Max = 50)
/// @param dataHoraInicio Data inicio do d\u00E9bito recorrente.
/// @param dataHoraFim Data fim do d\u00E9bito recorrente.
/// @param ativo Identifica se o d\u00E9bito recorrente est\u00E1 ativo.
/// @param dataHoraUltimoPagamento Data do \u00FAltimo pagamento efetuado.
/// 
///
/// @return PierPageTipoDebitoRecorrenteResponse*
-(NSNumber*) listarUsingGET16WithIdConta: (NSNumber*) idConta
    idTipoDebitoRecorrente: (NSNumber*) idTipoDebitoRecorrente
    sort: (NSArray* /* NSString */) sort
    page: (NSNumber*) page
    limit: (NSNumber*) limit
    dataHoraInicio: (NSString*) dataHoraInicio
    dataHoraFim: (NSString*) dataHoraFim
    ativo: (NSNumber*) ativo
    dataHoraUltimoPagamento: (NSString*) dataHoraUltimoPagamento
    completionHandler: (void (^)(PierPageTipoDebitoRecorrenteResponse* output, NSError* error)) handler;


///
///
/// Listar Tipos Debitos Recorrentes
/// Para os emissores que utilizam a entidade Debitos Recorrentes precisam previamente solicitar a Conductor o cadastro de quais Tipos eles poder\u00E3o comercializar. Por isso, este recurso tem como objetivo apresentar todos os Tipos de D\u00E9bitos Recorrentes que est\u00E3o cadastrados para um determinado Emissor, independente do status dele.
///
/// @param sort Tipo de ordena\u00E7\u00E3o dos registros.
/// @param page P\u00E1gina solicitada (Default = 0)
/// @param limit Limite de elementos por solicita\u00E7\u00E3o (Default = 50, Max = 50)
/// @param _id C\u00F3digo de identifica\u00E7\u00E3o do tipo de d\u00E9bito recorrente (id).
/// @param descricao Descri\u00E7\u00E3o do tipo de d\u00E9bito recorrente.
/// @param valor Valor do tipo de d\u00E9bito recorrente.
/// @param flagAtivo Flag que identifica se o tipo d\u00E9bito recorrente est\u00E1 ativo.
/// 
///
/// @return PierPageTipoDebitoRecorrenteResponse*
-(NSNumber*) listarUsingGET43WithSort: (NSArray* /* NSString */) sort
    page: (NSNumber*) page
    limit: (NSNumber*) limit
    _id: (NSNumber*) _id
    descricao: (NSString*) descricao
    valor: (NSNumber*) valor
    flagAtivo: (NSNumber*) flagAtivo
    completionHandler: (void (^)(PierPageTipoDebitoRecorrenteResponse* output, NSError* error)) handler;



@end
